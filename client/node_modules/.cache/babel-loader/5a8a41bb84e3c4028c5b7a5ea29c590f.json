{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/merntestapp/merntest/client/src/Kitten.js\";\nimport React from 'react';\nimport { render } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport Kitten from './Kitten'; // Some test data for the tests.\n\nvar kitten = {\n  id: 42,\n  name: \"Tom\",\n  bilds: [\"sleeping\", \"purring\", \"people watching\", \"eating\"]\n};\nit('renders the name of the kitten', function () {\n  var comp = React.createElement(Kitten, {\n    getKitten: function getKitten(_) {\n      return kitten;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n\n  var _render = render(comp),\n      getByText = _render.getByText;\n\n  expect(getByText(kitten.name)).toBeInTheDocument();\n});\nit('renders the \"Bilds\" header', function () {\n  var comp = React.createElement(Kitten, {\n    getKitten: function getKitten(_) {\n      return kitten;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n\n  var _render2 = render(comp),\n      getByText = _render2.getByText;\n\n  expect(getByText(\"Bilds\")).toBeInTheDocument();\n});\nit('renders each hobby', function () {\n  var comp = React.createElement(Kitten, {\n    getKitten: function getKitten(_) {\n      return kitten;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n\n  var _render3 = render(comp),\n      getByText = _render3.getByText;\n\n  kitten.hobbies.forEach(function (h) {\n    return expect(getByText(h)).toBeInTheDocument();\n  });\n});\nit('renders the \"Back\" link', function () {\n  var comp = React.createElement(Kitten, {\n    getKitten: function getKitten(_) {\n      return kitten;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n\n  var _render4 = render(comp),\n      getByText = _render4.getByText;\n\n  expect(getByText(/back/i)).toBeInTheDocument();\n});","map":{"version":3,"sources":["/Users/admin/Desktop/merntestapp/merntest/client/src/Kitten.js"],"names":["React","render","Kitten","kitten","id","name","bilds","it","comp","_","getByText","expect","toBeInTheDocument","hobbies","forEach","h"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,wBAArB;AACA,OAAO,yCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,IAAMC,MAAM,GAAG;AACXC,EAAAA,EAAE,EAAE,EADO;AAEXC,EAAAA,IAAI,EAAE,KAFK;AAGXC,EAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,iBAAxB,EAA2C,QAA3C;AAHI,CAAf;AAMAC,EAAE,CAAC,gCAAD,EAAmC,YAAM;AACvC,MAAMC,IAAI,GAAG,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,mBAAAC,CAAC;AAAA,aAAIN,MAAJ;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AADuC,gBAEnBF,MAAM,CAACO,IAAD,CAFa;AAAA,MAEhCE,SAFgC,WAEhCA,SAFgC;;AAGvCC,EAAAA,MAAM,CAACD,SAAS,CAACP,MAAM,CAACE,IAAR,CAAV,CAAN,CAA+BO,iBAA/B;AACH,CAJC,CAAF;AAMAL,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACnC,MAAMC,IAAI,GAAG,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,mBAAAC,CAAC;AAAA,aAAIN,MAAJ;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AADmC,iBAEfF,MAAM,CAACO,IAAD,CAFS;AAAA,MAE5BE,SAF4B,YAE5BA,SAF4B;;AAGnCC,EAAAA,MAAM,CAACD,SAAS,CAAC,OAAD,CAAV,CAAN,CAA2BE,iBAA3B;AACH,CAJC,CAAF;AAMAL,EAAE,CAAC,oBAAD,EAAuB,YAAM;AAC3B,MAAMC,IAAI,GAAG,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,mBAAAC,CAAC;AAAA,aAAIN,MAAJ;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AAD2B,iBAEPF,MAAM,CAACO,IAAD,CAFC;AAAA,MAEpBE,SAFoB,YAEpBA,SAFoB;;AAG3BP,EAAAA,MAAM,CAACU,OAAP,CAAeC,OAAf,CAAuB,UAAAC,CAAC;AAAA,WAAIJ,MAAM,CAACD,SAAS,CAACK,CAAD,CAAV,CAAN,CAAqBH,iBAArB,EAAJ;AAAA,GAAxB;AACH,CAJC,CAAF;AAMAL,EAAE,CAAC,yBAAD,EAA4B,YAAM;AAChC,MAAMC,IAAI,GAAG,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,mBAAAC,CAAC;AAAA,aAAIN,MAAJ;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;;AADgC,iBAEZF,MAAM,CAACO,IAAD,CAFM;AAAA,MAEzBE,SAFyB,YAEzBA,SAFyB;;AAGhCC,EAAAA,MAAM,CAACD,SAAS,CAAC,OAAD,CAAV,CAAN,CAA2BE,iBAA3B;AACH,CAJC,CAAF","sourcesContent":["import React from 'react';\nimport {render} from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport Kitten from './Kitten';\n\n// Some test data for the tests.\nconst kitten = {\n    id: 42,\n    name: \"Tom\",\n    bilds: [\"sleeping\", \"purring\", \"people watching\", \"eating\"]\n};\n\nit('renders the name of the kitten', () => {\n    const comp = <Kitten getKitten={_ => kitten}/>;\n    const {getByText} = render(comp);\n    expect(getByText(kitten.name)).toBeInTheDocument();\n});\n\nit('renders the \"Bilds\" header', () => {\n    const comp = <Kitten getKitten={_ => kitten}/>;\n    const {getByText} = render(comp);\n    expect(getByText(\"Bilds\")).toBeInTheDocument();\n});\n\nit('renders each hobby', () => {\n    const comp = <Kitten getKitten={_ => kitten}/>;\n    const {getByText} = render(comp);\n    kitten.hobbies.forEach(h => expect(getByText(h)).toBeInTheDocument());\n});\n\nit('renders the \"Back\" link', () => {\n    const comp = <Kitten getKitten={_ => kitten}/>;\n    const {getByText} = render(comp);\n    expect(getByText(/back/i)).toBeInTheDocument();\n});"]},"metadata":{},"sourceType":"module"}