{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/merntest-Peter/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/merntest-Peter/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Router } from \"@reach/router\";\nimport Kitten from \"./Kitten\";\nimport Kittens from \"./Kittens\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  // API url from the file '.env' OR the file '.env.development'.\n  // The first file is only used in production.\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.API_URL = process.env.REACT_APP_API_URL;\n    _this.state = {\n      kittens: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get everything from the API\n      this.getKittens().then(function () {\n        return console.log(\"Kittens gotten!\");\n      });\n    }\n  }, {\n    key: \"getKittens\",\n    value: function () {\n      var _getKittens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, result, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(this.API_URL, \"/kittens\"); // URL of the API.\n\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", this.setState({\n                  // Set it in the state\n                  kittens: json\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getKittens() {\n        return _getKittens.apply(this, arguments);\n      }\n\n      return getKittens;\n    }()\n  }, {\n    key: \"getKitten\",\n    value: function getKitten(id) {\n      // Find the relevant kitten by id\n      return this.state.kittens.find(function (k) {\n        return k._id === id;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Kitten, {\n        path: \"/kitten/:id\",\n        getKitten: function getKitten(id) {\n          return _this2.getKitten(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Kittens, {\n        path: \"/\",\n        kittens: this.state.kittens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/merntest-Peter/client/src/App.js"],"names":["React","Component","Router","Kitten","Kittens","App","props","API_URL","process","env","REACT_APP_API_URL","state","kittens","getKittens","then","console","log","url","fetch","result","json","setState","id","find","k","_id","getKitten"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,G;;;AACF;AACA;AAGA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AADe,UAFnBC,OAEmB,GAFTC,OAAO,CAACC,GAAR,CAAYC,iBAEH;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB;;;;wCAEmB;AAChB;AACA,WAAKC,UAAL,GAAkBC,IAAlB,CAAuB;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAN;AAAA,OAAvB;AACH;;;;;;;;;;AAGOC,gBAAAA,G,aAAS,KAAKV,O,eAAmB;;;uBAClBW,KAAK,CAACD,GAAD,C;;;AAApBE,gBAAAA,M;;uBACaA,MAAM,CAACC,IAAP,E;;;AAAbA,gBAAAA,I;iDACG,KAAKC,QAAL,CAAc;AAAE;AACnBT,kBAAAA,OAAO,EAAEQ;AADQ,iBAAd,C;;;;;;;;;;;;;;;;;;8BAKDE,E,EAAI;AACV;AACA,aAAO,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,IAAnB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,KAAUH,EAAd;AAAA,OAAzB,CAAP;AACH;;;6BAEQ;AAAA;;AACL,aACI,0CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,aAAb;AAA2B,QAAA,SAAS,EAAE,mBAAAA,EAAE;AAAA,iBAAI,MAAI,CAACI,SAAL,CAAeJ,EAAf,CAAJ;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,GAAd;AAAkB,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ;AAQH;;;;EAxCaX,S;;AA2ClB,eAAeI,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Router} from \"@reach/router\";\nimport Kitten from \"./Kitten\";\nimport Kittens from \"./Kittens\";\n\nclass App extends Component {\n    // API url from the file '.env' OR the file '.env.development'.\n    // The first file is only used in production.\n    API_URL = process.env.REACT_APP_API_URL;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            kittens: []\n        };\n    }\n\n    componentDidMount() {\n        // Get everything from the API\n        this.getKittens().then(() => console.log(\"Kittens gotten!\"));\n    }\n\n    async getKittens() {\n        let url = `${this.API_URL}/kittens`; // URL of the API.\n        let result = await fetch(url); // Get the data\n        let json = await result.json(); // Turn it into json\n        return this.setState({ // Set it in the state\n            kittens: json\n        })\n    }\n\n    getKitten(id) {\n        // Find the relevant kitten by id\n        return this.state.kittens.find(k => k._id === id);\n    }\n\n    render() {\n        return (\n            <>\n                <Router>\n                    <Kitten path=\"/kitten/:id\" getKitten={id => this.getKitten(id)}/>\n                    <Kittens path=\"/\" kittens={this.state.kittens}/>\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}