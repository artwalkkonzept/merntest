{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/merntestapp/merntest/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/merntestapp/merntest/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Router } from \"@reach/router\";\nimport Artwalk from \"./Artwalk\";\nimport Artwalks from \"./Artwalks\";\nimport Gallery from \"./pages\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  // API url from the file '.env' OR the file '.env.development'.\n  // The first file is only used in production.\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.API_URL = process.env.REACT_APP_API_URL;\n    _this.state = {\n      artwalks: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Get everything from the API\n      this.getArtwalks().then(function () {\n        return console.log(\"Artwalks gotten!\");\n      });\n    }\n  }, {\n    key: \"getArtwalks\",\n    value: function () {\n      var _getArtwalks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url, result, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(this.API_URL, \"/artwalks\"); // URL of the API.\n\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", this.setState({\n                  // Set it in the state\n                  artwalks: json\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getArtwalks() {\n        return _getArtwalks.apply(this, arguments);\n      }\n\n      return getArtwalks;\n    }()\n  }, {\n    key: \"getArtwalk\",\n    value: function getArtwalk(id) {\n      // Find the relevant artwalk by id\n      return this.state.artwalks.find(function (k) {\n        return k._id === id;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Artwalk, {\n        path: \"/artwalk/:id\",\n        getArtwalk: function getArtwalk(id) {\n          return _this2.getArtwalk(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Artwalks, {\n        path: \"/\",\n        artwalks: this.state.artwalks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/merntestapp/merntest/client/src/App.js"],"names":["React","Component","Router","Artwalk","Artwalks","Gallery","App","props","API_URL","process","env","REACT_APP_API_URL","state","artwalks","getArtwalks","then","console","log","url","fetch","result","json","setState","id","find","k","_id","getArtwalk"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,OAAP,MAAoB,SAApB;;IAEMC,G;;;AACF;AACA;AAGA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AADe,UAFnBC,OAEmB,GAFTC,OAAO,CAACC,GAAR,CAAYC,iBAEH;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;;wCAEmB;AAChB;AACA,WAAKC,WAAL,GAAmBC,IAAnB,CAAwB;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;AAAA,OAAxB;AACH;;;;;;;;;;AAGOC,gBAAAA,G,aAAS,KAAKV,O,gBAAoB;;;uBACnBW,KAAK,CAACD,GAAD,C;;;AAApBE,gBAAAA,M;;uBACaA,MAAM,CAACC,IAAP,E;;;AAAbA,gBAAAA,I;iDACG,KAAKC,QAAL,CAAc;AAAE;AACnBT,kBAAAA,QAAQ,EAAEQ;AADO,iBAAd,C;;;;;;;;;;;;;;;;;;+BAKAE,E,EAAI;AACX;AACA,aAAO,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,IAApB,CAAyB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,GAAF,KAAUH,EAAd;AAAA,OAA1B,CAAP;AACH;;;6BAEQ;AAAA;;AACL,aACI,0CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,cAAd;AAA6B,QAAA,UAAU,EAAE,oBAAAA,EAAE;AAAA,iBAAI,MAAI,CAACI,UAAL,CAAgBJ,EAAhB,CAAJ;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ;AAQH;;;;EAxCaZ,S;;AA2ClB,eAAeK,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Router} from \"@reach/router\";\nimport Artwalk from \"./Artwalk\";\nimport Artwalks from \"./Artwalks\";\n\nimport Gallery from \"./pages\";\n\nclass App extends Component {\n    // API url from the file '.env' OR the file '.env.development'.\n    // The first file is only used in production.\n    API_URL = process.env.REACT_APP_API_URL;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            artwalks: []\n        };\n    }\n\n    componentDidMount() {\n        // Get everything from the API\n        this.getArtwalks().then(() => console.log(\"Artwalks gotten!\"));\n    }\n\n    async getArtwalks() {\n        let url = `${this.API_URL}/artwalks`; // URL of the API.\n        let result = await fetch(url); // Get the data\n        let json = await result.json(); // Turn it into json\n        return this.setState({ // Set it in the state\n            artwalks: json\n        })\n    }\n\n    getArtwalk(id) {\n        // Find the relevant artwalk by id\n        return this.state.artwalks.find(k => k._id === id);\n    }\n\n    render() {\n        return (\n            <>\n                <Router>\n                    <Artwalk path=\"/artwalk/:id\" getArtwalk={id => this.getArtwalk(id)}/>\n                    <Artwalks path=\"/\" artwalks={this.state.artwalks}/>\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}